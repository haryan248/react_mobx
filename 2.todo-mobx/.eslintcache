[{"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\TodoListContainer.js":"1","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\views\\TodoListView.js":"2","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\views\\TodoEditFormView.js":"3","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\TodoEditFormContainer.js":"4","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\App.js":"5","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\SearchbarContainer.js":"6","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\index.js":"7","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\stores\\TodoStore.js":"8"},{"size":231,"mtime":1631854735842,"results":"9","hashOfConfig":"10"},{"size":959,"mtime":1631854735934,"results":"11","hashOfConfig":"10"},{"size":2448,"mtime":1631858675417,"results":"12","hashOfConfig":"10"},{"size":603,"mtime":1631856607968,"results":"13","hashOfConfig":"10"},{"size":679,"mtime":1631855364022,"results":"14","hashOfConfig":"10"},{"size":480,"mtime":1631854735757,"results":"15","hashOfConfig":"10"},{"size":424,"mtime":1631855539394,"results":"16","hashOfConfig":"10"},{"size":468,"mtime":1631857369042,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kephga",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\TodoListContainer.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\views\\TodoListView.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\views\\TodoEditFormView.js",["36"],"import \"date-fns\";\nimport React, { PureComponent } from \"react\";\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\n\nclass TodoEditFormView extends PureComponent {\n    render() {\n        const { todo, onSetTodoProps } = this.props;\n        const selectedDate = new Date();\n\n        return (\n            <form noValidate>\n                <Grid container xs={12} spacing={3}>\n                    <Grid item xs={3}>\n                        <TextField value={todo && todo.title ? todo.title : \"\"} margin=\"normal\" id=\"outlined-basic\" label=\"Title\" variant=\"standard\" onChange={(event) => onSetTodoProps(\"title\", event.target.value)} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date\"\n                                format=\"yyyy-MM-dd\"\n                                value={todo && todo.date ? todo.date : null}\n                                onChange={(date) => onSetTodoProps(\"date\", date.valueOf())}\n                                KeyboardButtonProps={{\n                                    \"aria-label\": \"change date\",\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>\n                        Add\n                    </Button>\n                    &nbsp;&nbsp;\n                    <Button variant=\"contained\" color=\"default\" startIcon={<UpdateIcon />}>\n                        Update\n                    </Button>\n                    &nbsp;&nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />}>\n                        Delete\n                    </Button>\n                    &nbsp;&nbsp;\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default TodoEditFormView;\n","C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\TodoEditFormContainer.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\App.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\containers\\SearchbarContainer.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\index.js",[],"C:\\Users\\harya\\Desktop\\React\\react_mobx\\2.todo-mobx\\src\\stores\\TodoStore.js",["37"],"import { observable, action, computed, makeObservable } from \"mobx\";\r\nclass TodoStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n    @observable\r\n    _todo = {}; // id, title, date\r\n\r\n    get todo() {\r\n        return this._todo;\r\n    }\r\n    @action\r\n    setTodoProps(name, value) {\r\n        this._todo = {\r\n            ...this._todo,\r\n            [name]: value,\r\n        };\r\n    }\r\n}\r\n\r\n// 객체 생성 후 export\r\nexport default new TodoStore();\r\n",{"ruleId":"38","severity":1,"message":"39","line":13,"column":15,"nodeType":"40","messageId":"41","endLine":13,"endColumn":27},{"ruleId":"38","severity":1,"message":"42","line":1,"column":30,"nodeType":"40","messageId":"41","endLine":1,"endColumn":38},"no-unused-vars","'selectedDate' is assigned a value but never used.","Identifier","unusedVar","'computed' is defined but never used."]